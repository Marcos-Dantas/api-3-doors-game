openapi: 3.0.0
info: 
  title: API-3DOORS-GAME
    version: 1.0.0
  description: 'Nossa API que faz o cadastro dos usuários, e serve como uma interface entre o nosso jogo e a nossa landing page.'
  contact: 
    name: Suporte a Devs
    email: kisnaiver1223@gmail.com
  license:
    name: "Lincença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.html
externalDocs:
  description: Link repositório
  url: https://github.com/Marcos-Dantas/api-3-doors-game
tags:
- name: Usuários
  description: Ações quanto ao usuário
servers:
  - url: https://api-3-doors-game.vercel.app/
  - url: http://localhost:3000/
paths:
  /signup:
    post:
      tags:
      - Usuários
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                email:
                  type: string
                password:
                  type: string
                city:
                  type: string
                state:
                  type: string
                age:
                  type: string
      responses:
        201:
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuário criado."
        403:
          description: API Key não fornecida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"   
        401:
          description: API Key inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"       
        422:
          description: Erros de validação
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
  /login:
    post:
      summary: Autentica um usuário existente
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  token:
                    type: string
        401:
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        403:
          description: API Key não fornecida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"          
  /users/top-ranking:
    get:
      summary: Lista de top jogadores
      tags:
        - Usuários
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  email:
                    type: string
                  score:
                    type: integer
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
        403:
          description: API Key não fornecida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"   
        401:
          description: API Key inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"   
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
  /users/{email}:
    get:
      summary: Retorna informações cadastradas do usuário
      tags:
      - Usuários
      parameters:
      - name: email
        in: path
        schema: 
          type: string
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Falha ao executar
          content:
            application/json:
              example: "Usuario não encontrado."
        403:
          description: API Key não fornecida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"   
        401:
          description: API Key inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyError"   
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string        

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API Key necessária para autenticação
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        city:
          type: string
        state:
          type: string
        age:
          type: integer
    ApiKeyError:
      type: object
      properties:
        error:
          type: string  

security:
  - ApiKeyAuth: []